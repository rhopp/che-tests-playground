pipeline {
    agent { label 'rhel7-8gb' }

    options {
        timestamps()
        timeout(time: 2, unit: 'HOURS')
        buildDiscarder(logRotator(artifactDaysToKeepStr: '',
                artifactNumToKeepStr: '', daysToKeepStr: '60', numToKeepStr: '30'))
    }

    // build each 3 hours
    triggers { cron("H H/3 * * *") }

    parameters {
        string(name: 'emails',
                defaultValue: 'dnochevn@redhat.com',
                description: 'Comma-separated list of emails to send results')
    }

    stages {
        stage("Run E2E tests against master branch") {
            parallel {
                stage('Run Happy path tests') {
                    steps {
                        build job: 'basic-MultiUser-Che-check-e2e-tests-against-k8s',
                                parameters: [
                                        string(name: 'cheImageRepo',
                                                value: 'maxura/che-server'),

                                        string(name: 'cheImageTag',
                                                value: 'master'),

                                        booleanParam(name: 'buildChe',
                                                value: true),

                                        string(name: 'ghprbSourceBranch',
                                                value: 'master'),

                                        string(name: 'ghprbPullId',
                                                value: ''),

                                        string(name: 'e2eTestToRun',
                                                value: 'test-happy-path'),

                                        string(name: 'testWorkspaceDevfileUrl',
                                                value: 'https://raw.githubusercontent.com/eclipse/che/master/tests/e2e/files/happy-path/happy-path-workspace.yaml'),

                                        text(name: 'customResourceFileContent',
                                                value: ''),

                                        booleanParam(name: 'createTestWorkspace',
                                                value: true),

                                        string(name: 'e2eTestParameters',
                                                value: '')
                                ]
                    }
                }

                stage('Run devfile tests') {
                    steps {
                        build job: 'basic-MultiUser-Che-check-e2e-tests-against-k8s',
                                parameters: [
                                        string(name: 'cheImageRepo',
                                                value: 'maxura/che-server'),

                                        string(name: 'cheImageTag',
                                                value: 'master'),

                                        booleanParam(name: 'buildChe',
                                                value: true),

                                        string(name: 'ghprbSourceBranch',
                                                value: 'master'),

                                        string(name: 'ghprbPullId',
                                                value: ''),

                                        string(name: 'e2eTestToRun',
                                                value: 'test-all-devfiles'),

                                        string(name: 'testWorkspaceDevfileUrl',
                                                value: ''),

                                        text(name: 'customResourceFileContent',
                                                value: ''),

                                        booleanParam(name: 'createTestWorkspace',
                                                value: false),

                                        string(name: 'e2eTestParameters',
                                                value: '')
                                ]
                    }
                }
            }
        }
    }

    post {
        failure {
            script {
                if (emails != "") {
                    mail to: emails,
                        subject: "Jenkins Job $currentBuild.fullDisplayName has failed.",
                        body: "Build $currentBuild.absoluteUrl has failed."
                }
            }
        }
    }
}