---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: petclinic
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: petclinic
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: petclinic
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/component: database
      app.kubernetes.io/part-of: petclinic
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: petclinic
    spec:
      containers:
      - name: mysql
        image: centos/mysql-57-centos7
        resources:
          requests:
            memory: 512Mi
        env:
        - name: MYSQL_USER
          value: petclinic
        - name: MYSQL_PASSWORD
          value: petclinic
        - name: MYSQL_ROOT_PASSWORD
          value: petclinic
        - name: MYSQL_DATABASE
          value: petclinic
        ports:
        - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-app
  labels:
    app.kubernetes.io/name: petclinic
    app.kubernetes.io/component: webapp
    app.kubernetes.io/part-of: petclinic
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: petclinic
    app.kubernetes.io/component: webapp
    app.kubernetes.io/part-of: petclinic
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: spring-boot-app
  labels:
    app.kubernetes.io/name: petclinic
    app.kubernetes.io/component: webapp
    app.kubernetes.io/part-of: petclinic
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: petclinic
      app.kubernetes.io/component: webapp
      app.kubernetes.io/part-of: petclinic
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: petclinic
        app.kubernetes.io/component: webapp
        app.kubernetes.io/part-of: petclinic
    spec:
      containers:
      - name: spring-boot
        image: mariolet/petclinic:d2831f9b
        resources:
          requests:
            memory: 2000Mi
        ports:
        - containerPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: spring-boot-app
  labels:
    app: spring-petclinic
    tier: frontend
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: 192.168.99.100.nip.io
    http:
      paths:
      - path: /
        backend:
          serviceName: spring-boot-app
          servicePort: 8080
